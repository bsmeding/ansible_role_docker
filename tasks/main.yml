- name: Remove conflicting packages for Docker in RHEL
  ansible.builtin.package:
    name: podman
    state: absent
  when: ansible_os_family == "RedHat"

- name: Ensure group "docker" exists
  group:
    name: docker
    state: present

- name: set docker user
  user:
    name: docker
    comment: docker
    uid: 1040
    group: docker

- name: get the username
  become: false
  command: whoami
  register: current_username
  changed_when: false

- name: Check python3-pip is installed
  ansible.builtin.package:
    name: python3-pip
    state: present
  become: True

- name: Check pip is latest version
  ansible.builtin.pip:
    name: pip
    state: latest
    umask: "0022"
  # become: True

- name: Check docker pip is latest version
  ansible.builtin.pip:
    name: docker
    state: latest
    umask: "0022"
  # become: True

- name: Check Docker role
  include_role:
    name: geerlingguy.docker
  vars:
    docker_users:
      - docker
      - "{{ current_username.stdout }}"

- name: Create a symbolic link for docker-compose on RedHat
  ansible.builtin.file:
    src: "{{ docker_compose_path | default('/usr/local/bin/docker-compose') }}" # If default directory for geerlingguy.docker is changed, also change here (same variable name)
    dest: /usr/bin/docker-compose
    state: link
  when: ansible_os_family == "RedHat"

- name: Proxy found, set proxy file for docker
  block:
  - name: Creates directory for proxy file
    file:
      path: "/etc/systemd/system/docker.service.d"
      state: directory
      owner: root
      group: root
      recurse: yes

  - name: Set docker http-proxy.conf
    ansible.builtin.template:
      src: http-proxy.conf.j2
      dest: "/etc/systemd/system/docker.service.d/http-proxy.conf"
    notify: restart docker service
  when: (http_proxy is defined and http_proxy|length>5) or ( https_proxy is defined and https_proxy|length>5)

- name: get docker uid
  ansible.builtin.getent:
    database: passwd
    key: docker
  register: docker_uid

- name: Save UID
  ansible.builtin.set_fact:
    docker_uid: "{{ docker_uid.ansible_facts.getent_passwd.docker[1] }}"
    docker_gid: "{{ docker_uid.ansible_facts.getent_passwd.docker[2] }}"
  when: docker_uid is defined
